@model Inmobiliaria_Rios.Models.Contrato
@using System.Text.Json
@{
    ViewData["Title"] = "Nuevo Contrato";
    var inmuebles = ViewBag.Inmuebles as IEnumerable<Inmobiliaria_Rios.Models.Propiedad>;
    var clientes = ViewBag.Clientes as IEnumerable<Inmobiliaria_Rios.Models.Cliente>;
}

<div class="container">
    <h1 class="display-4-text-primary mb-4">Nuevo Contrato</h1>
    @* Mostrar errores de validación *@
    <div asp-validation-summary="All" class="text-danger"></div>
    <form asp-action="Create" asp-controller="Contratos" method="post" id="formContrato">
        <div class="row">
            <div class="col-md-6">
                <!-- Campo de búsqueda de inmueble -->
                <div class="form-group mb-3">
                    <label class="form-label">Buscar Inmueble <span class="text-danger">*</span></label>
                    <div class="input-group">
                        <input type="text" id="searchInmueble" class="form-control" placeholder="Buscar inmueble..." autocomplete="off" required>
                        <button class="btn btn-success" type="button" id="limpiarBusquedaInmueble">
                            <i class="bi bi-x-circle"></i>
                        </button>
                    </div>
                    <input type="hidden" name="IdInmuebles" id="IdInmuebles" value="@Model?.IdInmuebles" />
                    <span class="text-danger" id="inmuebleError">@Html.ValidationMessage("IdInmuebles")</span>
                    <div id="searchResultsInmueble" class="list-group position-absolute" style="z-index: 1000; width: 95%;"></div>
                    <div id="inmuebleInfo" class="mt-2"></div>
                </div>
                <div class="form-group mb-3">
                    <label for="FechaInicio" class="form-label">Fecha Inicio</label>
                    <input type="date" class="form-control" id="FechaInicio" name="FechaInicio" required />
                </div>
                <div class="form-group mb-3">
                    <label for="MontoMensual" class="form-label">Monto Mensual</label>
                    <input type="number" class="form-control" id="MontoMensual" name="MontoMensual" step="0.01" required />
                </div>
            </div>
            <div class="col-md-6">
                <!-- Campo de búsqueda de cliente -->
                <div class="form-group mb-3">
                    <label class="form-label">Buscar Cliente <span class="text-danger">*</span></label>
                    <div class="input-group">
                        <input type="text" id="searchCliente" class="form-control" placeholder="Buscar cliente..." autocomplete="off" required>
                        <button class="btn btn-success" type="button" id="limpiarBusquedaCliente">
                            <i class="bi bi-x-circle"></i>
                        </button>
                    </div>
                    <input type="hidden" name="IdClientes" id="IdClientes" value="@Model?.IdClientes" />
                    <span class="text-danger" id="clienteError">@Html.ValidationMessage("IdClientes")</span>
                    <div id="searchResultsCliente" class="list-group position-absolute" style="z-index: 1000; width: 95%;"></div>
                    <div id="clienteInfo" class="mt-2"></div>
                </div>
                <div class="form-group mb-3">
                    <label for="FechaFin" class="form-label">Fecha Fin</label>
                    <input type="date" class="form-control" id="FechaFin" name="FechaFin" required />
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-center gap-2 mt-4">
            <button type="submit" class="btn btn-primary" id="guardarBtn" disabled>
                <i class="bi bi-save me-2"></i>Guardar
            </button>
            <a href="@Url.Action("Index", "Contratos")" class="btn btn-secondary">
                <i class="bi bi-x-circle me-2"></i>Cancelar
            </a>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // --- INMUEBLE ---
        const searchInmueble = document.getElementById('searchInmueble');
        const searchResultsInmueble = document.getElementById('searchResultsInmueble');
        const idInmuebleInput = document.getElementById('IdInmuebles');
        const inmuebleInfo = document.getElementById('inmuebleInfo');

        let inmuebles = @Html.Raw(JsonSerializer.Serialize(inmuebles ?? new List<Inmobiliaria_Rios.Models.Propiedad>()));

        searchInmueble.addEventListener('input', function () {
            const searchTerm = this.value.trim().toLowerCase();
            if (searchTerm.length < 2) {
                searchResultsInmueble.innerHTML = '';
                return;
            }
            const filtered = inmuebles
                .filter(i => i.Opcion && i.Opcion.toLowerCase() === "alquiler") // Solo alquiler
                .filter(i =>
                    (i.Direccion && i.Direccion.toLowerCase().includes(searchTerm)) ||
                    (i.Tipo && i.Tipo.toLowerCase().includes(searchTerm)) ||
                    (i.Provincia && i.Provincia.toLowerCase().includes(searchTerm)) ||
                    (i.Localidad && i.Localidad.toLowerCase().includes(searchTerm))
                );
            if (filtered.length > 0) {
                searchResultsInmueble.innerHTML = filtered.map(i => `
                    <a href="#" class="list-group-item list-group-item-action"
                       onclick="seleccionarInmueble(${i.Id}, '${i.Direccion}', '${i.Tipo}', '${i.Provincia}', '${i.Localidad}'); return false;">
                        ${i.Direccion} - ${i.Tipo} - ${i.Provincia} - ${i.Localidad}
                    </a>
                `).join('');
            } else {
                searchResultsInmueble.innerHTML = '<div class="list-group-item text-danger">No se encontraron resultados</div>';
            }
        });

        function seleccionarInmueble(id, direccion, tipo, provincia, localidad) {
            idInmuebleInput.value = id;
            searchInmueble.value = `${direccion} - ${tipo} - ${provincia} - ${localidad}`;
            inmuebleInfo.innerHTML = `
                <div class="alert alert-success">
                    <strong>Inmueble seleccionado:</strong><br>
                    ${direccion} - ${tipo} - ${provincia} - ${localidad}
                </div>`;
            searchResultsInmueble.innerHTML = '';
        }

        document.getElementById('limpiarBusquedaInmueble').addEventListener('click', function () {
            searchInmueble.value = '';
            idInmuebleInput.value = '';
            inmuebleInfo.innerHTML = '';
            searchResultsInmueble.innerHTML = '';
        });

        document.addEventListener('click', function (e) {
            if (!searchInmueble.contains(e.target) && !searchResultsInmueble.contains(e.target)) {
                searchResultsInmueble.innerHTML = '';
            }
        });

        // --- CLIENTE ---
        const searchCliente = document.getElementById('searchCliente');
        const searchResultsCliente = document.getElementById('searchResultsCliente');
        const idClienteInput = document.getElementById('IdClientes');
        const clienteInfo = document.getElementById('clienteInfo');

        let clientes = @Html.Raw(JsonSerializer.Serialize(clientes ?? new List<Inmobiliaria_Rios.Models.Cliente>()));

        searchCliente.addEventListener('input', function () {
            const searchTerm = this.value.trim().toLowerCase();
            if (searchTerm.length < 2) {
                searchResultsCliente.innerHTML = '';
                return;
            }
            const filtered = clientes.filter(c =>
                (c.Nombre && c.Nombre.toLowerCase().includes(searchTerm)) ||
                (c.Apellido && c.Apellido.toLowerCase().includes(searchTerm)) ||
                (c.DNI && c.DNI.toString().includes(searchTerm))
            );
            if (filtered.length > 0) {
                searchResultsCliente.innerHTML = filtered.map(c => `
                    <a href="#" class="list-group-item list-group-item-action"
                       onclick="seleccionarCliente(${c.Id}, '${c.Nombre}', '${c.Apellido}', ${c.DNI}); return false;">
                        ${c.Nombre} ${c.Apellido} - ${c.DNI}
                    </a>
                `).join('');
            } else {
                searchResultsCliente.innerHTML = '<div class="list-group-item text-danger">No se encontraron resultados</div>';
            }
        });

        function seleccionarCliente(id, nombre, apellido, dni) {
            idClienteInput.value = id;
            searchCliente.value = `${nombre} ${apellido} - ${dni}`;
            clienteInfo.innerHTML = `
                <div class="alert alert-success">
                    <strong>Cliente seleccionado:</strong><br>
                    ${nombre} ${apellido}<br>
                    DNI: ${dni}
                </div>`;
            searchResultsCliente.innerHTML = '';
        }

        document.getElementById('limpiarBusquedaCliente').addEventListener('click', function () {
            searchCliente.value = '';
            idClienteInput.value = '';
            clienteInfo.innerHTML = '';
            searchResultsCliente.innerHTML = '';
        });

        document.addEventListener('click', function (e) {
            if (!searchCliente.contains(e.target) && !searchResultsCliente.contains(e.target)) {
                searchResultsCliente.innerHTML = '';
            }
        });

        // Validación para habilitar el botón Guardar solo si todos los campos requeridos están completos
        document.addEventListener('DOMContentLoaded', function () {
            const guardarBtn = document.getElementById('guardarBtn');
            const form = document.getElementById('formContrato');
            const requiredInputs = [
                document.getElementById('IdInmuebles'),
                document.getElementById('IdClientes'),
                document.getElementById('FechaInicio'),
                document.getElementById('FechaFin'),
                document.getElementById('MontoMensual')
            ];

            function validateForm() {
                let allFilled = true;
                requiredInputs.forEach(input => {
                    if (!input.value || input.value.trim() === '' || input.value === '0') {
                        allFilled = false;
                    }
                });
                guardarBtn.disabled = !allFilled;
            }

            requiredInputs.forEach(input => {
                input.addEventListener('input', validateForm);
            });

            // También validar cuando se selecciona inmueble o cliente desde la búsqueda
            document.getElementById('searchInmueble').addEventListener('input', validateForm);
            document.getElementById('searchCliente').addEventListener('input', validateForm);

            validateForm(); // Validar al cargar la página
        });

        // Confirmación antes de guardar
        document.getElementById('formContrato').addEventListener('submit', function (e) {
            if (!confirm('¿Está seguro que desea guardar este contrato?')) {
                e.preventDefault();
            }
        });
    </script>
}
